// Code generated by "enumer -type=AccessProviderAction"; DO NOT EDIT.

package data_access

import (
	"fmt"
	"strings"
)

const _AccessProviderActionName = "ActionUnknownActionExistingActionCreateActionUpdateActionDelete"

var _AccessProviderActionIndex = [...]uint8{0, 13, 27, 39, 51, 63}

const _AccessProviderActionLowerName = "actionunknownactionexistingactioncreateactionupdateactiondelete"

func (i AccessProviderAction) String() string {
	if i < 0 || i >= AccessProviderAction(len(_AccessProviderActionIndex)-1) {
		return fmt.Sprintf("AccessProviderAction(%d)", i)
	}
	return _AccessProviderActionName[_AccessProviderActionIndex[i]:_AccessProviderActionIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _AccessProviderActionNoOp() {
	var x [1]struct{}
	_ = x[ActionUnknown-(0)]
	_ = x[ActionExisting-(1)]
	_ = x[ActionCreate-(2)]
	_ = x[ActionUpdate-(3)]
	_ = x[ActionDelete-(4)]
}

var _AccessProviderActionValues = []AccessProviderAction{ActionUnknown, ActionExisting, ActionCreate, ActionUpdate, ActionDelete}

var _AccessProviderActionNameToValueMap = map[string]AccessProviderAction{
	_AccessProviderActionName[0:13]:       ActionUnknown,
	_AccessProviderActionLowerName[0:13]:  ActionUnknown,
	_AccessProviderActionName[13:27]:      ActionExisting,
	_AccessProviderActionLowerName[13:27]: ActionExisting,
	_AccessProviderActionName[27:39]:      ActionCreate,
	_AccessProviderActionLowerName[27:39]: ActionCreate,
	_AccessProviderActionName[39:51]:      ActionUpdate,
	_AccessProviderActionLowerName[39:51]: ActionUpdate,
	_AccessProviderActionName[51:63]:      ActionDelete,
	_AccessProviderActionLowerName[51:63]: ActionDelete,
}

var _AccessProviderActionNames = []string{
	_AccessProviderActionName[0:13],
	_AccessProviderActionName[13:27],
	_AccessProviderActionName[27:39],
	_AccessProviderActionName[39:51],
	_AccessProviderActionName[51:63],
}

// AccessProviderActionString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func AccessProviderActionString(s string) (AccessProviderAction, error) {
	if val, ok := _AccessProviderActionNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _AccessProviderActionNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to AccessProviderAction values", s)
}

// AccessProviderActionValues returns all values of the enum
func AccessProviderActionValues() []AccessProviderAction {
	return _AccessProviderActionValues
}

// AccessProviderActionStrings returns a slice of all String values of the enum
func AccessProviderActionStrings() []string {
	strs := make([]string, len(_AccessProviderActionNames))
	copy(strs, _AccessProviderActionNames)
	return strs
}

// IsAAccessProviderAction returns "true" if the value is listed in the enum definition. "false" otherwise
func (i AccessProviderAction) IsAAccessProviderAction() bool {
	for _, v := range _AccessProviderActionValues {
		if i == v {
			return true
		}
	}
	return false
}
