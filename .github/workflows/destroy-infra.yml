name: Manual - Destroy infra
on:
  workflow_call:
    inputs:
      targetEnvironment:
        required: true
        type: string
    secrets:
      AWS_SHARED_TF_STATE_OIDC_ROLE:
        required: true
      AWS_SHARED_TF_STATE_REGION:
        required: true
      AWS_S3_TERRAFORM_BUCKET:
        required: true
      AWS_S3_TERRAFORM_KEY:
        required: true
      AWS_TEST_OIDC_ROLE:
        required: true
      AWS_TEST_REGION:
        required: true
  workflow_dispatch:
    inputs:
      targetEnvironment:
        type: choice
        description: Please select a target environment
        required: true
        default: "integration_testing"
        options:
          - integration_testing
          - testing
permissions:
  id-token: write
  contents: read
env:
  AWS_SHARED_TF_STATE_PROFILE: "shared_tf_state"
jobs:
  generate-usage:
    environment: ${{ inputs.targetEnvironment }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: AWS Shared TF state account - Assume role using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        id: aws_assumed_role_shared_tf_state_account
        with:
          role-to-assume: ${{ secrets.AWS_SHARED_TF_STATE_OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_SHARED_TF_STATE_REGION }}
          output-credentials: true

      - name: AWS Shared TF state account - Setup Profile
        shell: bash
        run: |
          aws configure set region ${{ secrets.AWS_SHARED_TF_STATE_REGION }} --profile ${{ env.AWS_SHARED_TF_STATE_PROFILE }}
          aws configure set aws_access_key_id ${{ steps.aws_assumed_role_shared_tf_state_account.outputs.aws-access-key-id }} --profile ${{ env.AWS_SHARED_TF_STATE_PROFILE }}
          aws configure set aws_secret_access_key ${{ steps.aws_assumed_role_shared_tf_state_account.outputs.aws-secret-access-key }} --profile ${{ env.AWS_SHARED_TF_STATE_PROFILE }}
          aws configure set aws_session_token ${{ steps.aws_assumed_role_shared_tf_state_account.outputs.aws-session-token }} --profile ${{ env.AWS_SHARED_TF_STATE_PROFILE }}

      - name: AWS Shared TF state account - Check Profile
        shell: bash
        run: aws sts get-caller-identity --profile ${{ env.AWS_SHARED_TF_STATE_PROFILE }}

      - name: Testing account - Assume role using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        id: aws_assumed_role_testing_account
        with:
          role-to-assume: ${{ secrets.AWS_TEST_OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_TEST_REGION }}

      - name: Testing account - Check Profile
        shell: bash
        run: aws sts get-caller-identity

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform backend
        run: |
          cat <<EOF > .infra/infra/backend_override.tf
          terraform {
            backend "s3" {
            }
          }
          EOF

      - name: Terraform init
        run: |
          terraform init \
            -backend-config=bucket=${AWS_S3_TERRAFORM_BUCKET} \
            -backend-config=key=${AWS_S3_TERRAFORM_KEY} \
            -backend-config=region=${AWS_SHARED_TF_STATE_REGION} \
            -backend-config=profile=${AWS_SHARED_TF_STATE_PROFILE} \
        working-directory: .infra/infra
        env:
          AWS_S3_TERRAFORM_BUCKET: ${{ secrets.AWS_S3_TERRAFORM_BUCKET }}
          AWS_S3_TERRAFORM_KEY: ${{ secrets.AWS_S3_TERRAFORM_KEY }}
          AWS_SHARED_TF_STATE_REGION: ${{ secrets.AWS_SHARED_TF_STATE_REGION }}
          AWS_SHARED_TF_STATE_PROFILE: ${{ env.AWS_SHARED_TF_STATE_PROFILE }}

      - name: Generate usage
        run: make destroy-test-infra
